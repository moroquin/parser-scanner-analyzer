@startuml classdiagram


class App{
    +executeTestAnalysis()
    +showAnalysisResult(AnalyzerController analyzer)
}

package analyzer{

    package controller{

        class AnalyzerController{
            -Scanneable scanner
            -Parseable parser
            -SymbolTableController symbolTable
            -ErrorController error
            +setSource(String path): boolean
            +doAnalysis(): boolean
            +getSyntaxTree(): SyntaxTree
            +areErrors(): boolean
            +getErrors(): Error
            +getSymbolTable(): SymbolTable
        }

        class SymbolTableController{
            -SymbolTable symbolTable

        }

        class ErrorController{
            -Error error

        }


        package scanner{

            enum ScannerFactory{
                +getScanner()
            }


            class SyntaxTreeController{
                -SyntaxTree syntaxTree

            }

            interface Scannable{
                +{abstract}void setParser(Parseable parser);
                +{abstract}boolean verifyGrammar();
                +{abstract}void setSymbolTable(SymbolTableController symbolTable);
                +{abstract}SyntaxTree getSyntaxTree();
            }

            class JSStackAutomat{

            }

            JSStackAutomat -up-|> Scannable
            Scannable *-- SyntaxTreeController

            ScannerFactory .right.> Scannable


        }

        package parser{

            enum ParserFactory{
                +getParser()
            }

            interface Parseable{
                +{abstract} boolean setSource(String path);
                +{abstract} void setSymbolTable(SymbolTableController symbolTable);

            }

            class JSFinitAutamt{

            }

            JSFinitAutamt -up-|> Parseable
            ParserFactory .left.> Parseable

        }



        AnalyzerController *-- Parseable
        AnalyzerController *-- Scannable
        AnalyzerController *-- SymbolTableController
        AnalyzerController *-- ErrorController

        AnalyzerController ..> ParserFactory
        AnalyzerController ..> ScannerFactory

        Scannable -right-> Parseable

    }


    package model{

        class Error{

        }

        class SyntaxTree{

        }

        class SymbolTable


        class Token{
            -TypeToken typeToken
        }

        enum TypeToken{

        }

        Token *-- TypeToken

    }

    SymbolTableController *-- SymbolTable
    ErrorController *-- Error

    SyntaxTreeController *-- SyntaxTree





}


App .down.> AnalyzerController



@enduml