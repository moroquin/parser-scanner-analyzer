@startuml classdiagram


class App{

}

package analyzer{

    package controller{

        class AnalyzerController{
            -scanneable scanner
            -parseable parser
            -SymbolTableController symbolTable
            -ErrorController error
        }

        class SymbolTableController{
            -SymbolTable symbolTable

        }

        class ErrorController{
            -Error error

        }


        package scanner{



            class SyntaxTreeController{
                -SyntaxTree syntaxTree

            }

            interface scannable{

            }

            class JSStackAutomat{

            }

            JSStackAutomat -up-|> scannable
            scannable *-- SyntaxTreeController


        }

        package parser{

            interface parseable{

            }

            class JSFinitAutamt{

            }

            JSFinitAutamt -up-|> parseable

        }



        AnalyzerController *-- parseable
        AnalyzerController *-- scannable
        AnalyzerController *-- SymbolTableController
        AnalyzerController *-- ErrorController

        scannable -right-> parseable

    }


    package model{

        class Error{

        }

        class SyntaxTree{

        }

        class SymbolTable


        class Token{
            -TypeToken typeToken
        }

        enum TypeToken{

        }

        Token *-- TypeToken

    }

    SymbolTableController *-- SymbolTable
    ErrorController *-- Error

    SyntaxTreeController *-- SyntaxTree

    

    

}


App .down.> AnalyzerController



@enduml